 

* make input autofocus
* add logout
* make help take an arg which can tell you the verbs on an object that wouldn't otherwise be included in normal help


* add way to delete an object with a command
* add a check to make sure an object is dereferenced for deletion? or add a garbage collection phase, scheduled periodically
* reuse object ids when allocating new objects
* fix the hack during load where we assume the last object is the newest object; instead allow a constructor argument to set the id (maybe only if id is not used)
* add an object clone command
* maybe use es5 prototypes instead of es6 classes???


* add a command to add attributes, functions to objects, and assign attributes that are not 'editable' (for wizards only)
* add support for dot names in attributes, so that you can edit 'style.icon', etc
* add a back command so you can easily go back to where you were, or make it work with back buttons

* make check_form/validate_form take an optional form as an argument (otherwise takes a form name, which is found from get_form)
* move form stuff from client and server into library, so you can have it in one place, and it can be in separate files so it doesn't all have to be loaded,
  but validation could be on either end
* form preview for old file remains, and select doesn't initially show the selected file
* user theme doesn't currently work; you actually don't need form switcher because the css file can be specified as a default
* form switcher doesn't work properly, especially with closing/reopening a prompt, it wont reset data
* add a way to add data to a form without using a hidden field; just an attribute on the prompt object

* refactor logs/history out of world model into it's own object/class/thing

* add typing indicator, for chatting? make it easy to talk to someone who walks away
* add means of talking to someone who's moving around
* it shouldn't be possible to move if you're sitting down


* add item icons
* add public flag to uploads
* you need to deal with the capitals/lower case thing.  Either names must be lowercase, or names should be made lowercase for action log messages



* what about fancy features, like images, background images, ui effects, colour animations
* add notifications for activity in the current room, and maybe a way to filter only certain events
* background audio, uploaded to the media thing, with the option to loop or not, and users have a mute button.
* maybe sound effects?


COMMANDS:
* whisper
* stand? sit? or should you do fully customizable poses?
* follow/unfollow
* favorite location (and have menu at top)
* add/remove aliases
* move exits up/down
* who


RPG:
* eat/drink
* kill/attack/stop
* wear/hold/weild
* search/traps
* open/close/lock/pick/knock
* steal/sneak/backstab/sneak
* spells/cast
* learn/train/etc
* store, where you list items for sale, and other users can view, buy, offer


PROMPTS:
* edit verb/function
* customize room style
* select/config theme
* configure profile/preferences
* reorder exits
* configure character (in the body shop)


IDEAS:

* 'leash' the ducky, which makes it follow you, and also somehow makes it so that in descriptions, it shows you holding the leash... so it makes it
  clear to others (this is just an example for an effect that crosses beings)
* a harp that you can 'play', which will play a pre-recorded song that you upload to the server




    * a MUSH for the modern age... a more visually/intuitively interactive system, easily used on mobile
    * A significant part would still be chat.  You would see a description of the room you're in, a list of people and objects, and a chat window of the current
      content in the room.  You would see the exits in a visual format, with the option to click on them to travel.  Clicking on a person or object would allow you
      to select an interaction

    * urls would signify where you are, and could be passed around for ... some reason
    * possibly audio playing live? (this could be abused of course)
    * music + background image for part of screen, to set the mood of the location
    * customizable css files, which could be stored on the server and downloaded only to the authorized user.  It shouldn't require protections because it's
      all client side.

