
* new verbs, chess mechanism, permissions system, fix language, visibility, refactor
 
* multiple games; but how do you keep items separate between them?
* maybe use es5 prototypes instead of es6 classes???
* should the garbage collection phase be separate from saving?
* delete old backups so they don't multiply
* reuse object ids when allocating new objects
* you could make verbs into a class, which has the function, the args string, and the help, and it would automatically do the rest.  The issue is
  how would you find the verbs on the object since keys() wont work...; you might have to go to es5 classes for this anyways
* you need an automatic way of update data on the clients, maybe a pub/sub thing?  but can we avoid using an external db/mqtt broker?

* add notifications for activity in the current room, and maybe a way to filter only certain events
* add support for dot names in attributes, so that you can edit 'style.icon', etc
* modify setattr to allow new attributes (not checking editable_by)
* a way of specifying a different display name from the function name, rather than both being the first item, support for @go type commands

* add a means of viewing information about the game without logging in, like what kinds/classes/places/etc exist
* what about fancy features, ui effects, colour animations
* maybe sound effects?



* make input autofocus
* further refactor console code? do you want to mix models and components?
* make data dir selectable through an environment variable?

* add form generation functions??
* add a way to add data to a form without using a hidden field; just an attribute on the prompt object

* add password change to profile
* add public flag to uploads
* add image editor (client side?) that allows you to resize, pan, zoom, etc

* add builder permissions, so they can build but not do anything (how will permissions work?)
* make room customize css textarea only accessible to certain wizard users (maybe a distinction between wizard and builder?)

* expanded help system, with see also:, mechanics explaination, etc; should it be on the objects themselves, maybe it a big function, or on a help object?

* add a feedback system to prompt, so that it can send back info and get a response that updates the prompt, and you could use this
  to implement a chess type game, where you make a move, and it updates the view with the new positions
* do you want to change the way you do server side templates?  right now it's an encoded function which works but... yeah
* could you highlight stats that change, like during combat when your hit, your hp flashes red with the new number
* implement body-as-an-item; so that you're non-bodied player isn't effected by having a body; maybe selectable during body creation?



* custom messages for attacking, look at lpmud/discworld code
* go through all uses of format() and regularize them as much as possible
* you need to deal with the capitals/lower case thing.  Either names must be lowercase, or names should be made lowercase for action log messages
* the text for moving from room to room is totally messed up if it's not the typical exits

* what about initialization... can you factor all the constructor stuff out and into initialize/onLoad?
* partially implement verb thing, except for verbs_for() function??
* implement death; you'll need to create a corpse object which is separate from the being's body



* implement vending machine
* invisible flag, or is_visible() function, which is checked when displaying contents of a room; then monsters could die and hide themselves without moving

* add typing indicator, for chatting? make it easy to talk to someone who walks away
* add means of talking to someone who's moving around
* represent exits visually, by arranging them in the correct directions; maybe even an indicator of which direction you came from last
* add a back command so you can easily go back to where you were, or make it work with back buttons

* when you change a value of an object in details, it doesn't update the details view, even though the value changed



COMMANDS:
* whisper
* favorite location (and have menu at top)
* who
* where
* create/clone
* reparent


RPG:
* eat/drink
* kill/attack/stop
* wear/hold/weild
* search/traps
* open/close/lock/pick/knock
* steal/sneak/backstab/sneak
* spells/cast
* learn/train/etc
* store, where you list items for sale, and other users can view, buy, offer

* vending machine for items
* a map item that can take you back to where you've been, or could be found... maybe it would only guide you rather than quicklink you (ie. cause the right exits to be highlighted)
* add drinking: 'You're drunk and wander around instead' when you try to walk


PROMPTS:
* edit verb/function
* customize room style
* select/config theme
* configure profile/preferences
* configure character (in the body shop)


AREAS:
* Control Tower floor, with ATC radio
* Penthouse (which is ransacked)
* Private Rooms (hallway or hotel rooms that you can 'rent?')



IDEAS:

    * 'leash' the ducky, which makes it follow you, and also somehow makes it so that in descriptions, it shows you holding the leash... so it makes it
      clear to others (this is just an example for an effect that crosses beings)
    * a harp that you can 'play', which will play a pre-recorded song that you upload to the server
    * Helena mentioned it's cool when games can be beaten without fighting, even rewarded for not fighting
    * what if you could make an alternate means of 'battle' such that you have to play a game, like chess, which could be displayed somehow in a viewbox
      like prompt/details.
    * like nethack, you could have the game's moon reflect the real phase of the moon, and a full moon can mean something special
    * What about a look that changes based on who's looking... (description) so like most people would see you being pleasant, but two pvp players when
      looking at eachother would see 'the quickening, the sky turns black and lightning clashes as so and so walks by'
      "It's a goat. It's slowly chewing some grass while staring deep into your soul."



    * a MUSH for the modern age... a more visually/intuitively interactive system, easily used on mobile
    * A significant part would still be chat.  You would see a description of the room you're in, a list of people and objects, and a chat window of the current
      content in the room.  You would see the exits in a visual format, with the option to click on them to travel.  Clicking on a person or object would allow you
      to select an interaction

    * urls would signify where you are, and could be passed around for ... some reason
    * possibly audio playing live? (this could be abused of course)
    * music + background image for part of screen, to set the mood of the location
    * customizable css files, which could be stored on the server and downloaded only to the authorized user.  It shouldn't require protections because it's
      all client side.

    * for the body as an object... You'd have an item on you of the type Body, that you carry, and it has a verb called 'enter', which makes you enter your body.  That causes your player
      character to enter limbo, and you effectively sudo to the Body object; the connection ws.player object points to the body object.  It would then have to forward commands to
      its 'owner', which is the player character.  The Body object would be taken out of limbo and placed in the real world.  There would be no way to transfer objects or players/beings
      outside of their respective worlds...  There then becomes a clear delineation between the cloud world and the realm world (or the wasteland)


